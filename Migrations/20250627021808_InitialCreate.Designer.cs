// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using final_project.Migrations;

#nullable disable

namespace backend_.net.Migrations
{
    [DbContext(typeof(AruchaDb))]
    [Migration("20250627021808_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("final_project.Models.MealsPlan", b =>
                {
                    b.Property<int>("MealsPlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<int>("MealId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TimeOfDay")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("MealsPlanId");

                    b.HasIndex("UserId");

                    b.ToTable("Meals");
                });

            modelBuilder.Entity("final_project.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("strArea")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strCategory")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients10")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients11")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients12")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients13")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients14")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients15")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients16")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients17")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients18")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients19")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients20")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients3")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients4")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients5")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients6")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients7")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients8")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strIngredients9")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strInstructions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeal")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMealThumb")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure10")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure11")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure12")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure13")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure14")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure15")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure16")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure17")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure18")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure19")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure20")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure3")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure4")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure5")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure6")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure7")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure8")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strMeasure9")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strTags")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("strYoutube")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("final_project.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("final_project.Models.MealsPlan", b =>
                {
                    b.HasOne("final_project.Models.User", "User")
                        .WithMany("MealPlans")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("final_project.Models.Recipe", b =>
                {
                    b.HasOne("final_project.Models.User", "User")
                        .WithMany("Recipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("final_project.Models.User", b =>
                {
                    b.Navigation("MealPlans");

                    b.Navigation("Recipes");
                });
#pragma warning restore 612, 618
        }
    }
}
